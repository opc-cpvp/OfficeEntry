@implements IDisposable
@inject ISurveyInterop SurveyInterop
@inject IJSRuntime JSRuntime

<div id="blazor-survey-wraper">
</div>

@code {
    [Parameter]
    public string Id { get; set; } = "surveyElement";

    [Parameter]
    public string Class { get; set; } = "";

    [Parameter]
    public string SurveyUrl { get; set; }

    [Parameter]
    public EventCallback<string> OnSurveyCompleted { get; set; }

    [Parameter]
    public string Data { get; set; }

    private DotNetObjectReference<Survey> _objectReference;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender)
        {
            return;
        }

        _objectReference = DotNetObjectReference.Create(this);

        await JSRuntime.InvokeVoidAsync("interop.survey.register", _objectReference);
        await JSRuntime.InvokeVoidAsync("interop.survey.init", Id, @Class, SurveyUrl, Data);
    }

    public async Task GetData()
    {
        var surveyData = await JSRuntime.InvokeAsync<object>("interop.survey.data");
        await JSRuntime.InvokeVoidAsync("ShowAlert", surveyData.ToString());
    }

    public async Task SetData(string data)
    {
        await JSRuntime.InvokeVoidAsync("interop.survey.setData", data);
    }

    [JSInvokable]
    public async Task SurveyCompleted(string results)
    {
        await OnSurveyCompleted.InvokeAsync(results);
    }

    public void Dispose()
    {
        _objectReference?.Dispose();
    }
}